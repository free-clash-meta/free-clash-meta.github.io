<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://free-clash-meta.github.io/news/article-68334.htm" />
    <title>go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查</title>
        <meta name="description" content="一 Gin、rest full api和mysql实现增删改查  1 目前架构、含义以及对项目进行go mod gin_restful的项目目录。 每个目录的意思描述： 对gin_restful项目进" />
        <link rel="icon" href="/assets/website/img/free_clash_meta/favicon.ico" type="image/x-icon"/>
    <meta content="text/html;charset=utf-8" http-equiv="Content-Type">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <meta name="author" content="Free Clash Meta免费节点机场官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://free-clash-meta.github.io/news/article-68334.htm" />
    <meta property="og:site_name" content="Free Clash Meta免费节点机场官网" />
    <meta property="og:title" content="go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查" />
    <meta property="og:image" content="https://free-clash-meta.github.io/uploads/20250201-2/09e4937d18272fc8e0a668f044806a85.webp" />
        <meta property="og:release_date" content="2025-03-06T11:02:06" />
    <meta property="og:updated_time" content="2025-03-06T11:02:06" />
        <meta property="og:description" content="一 Gin、rest full api和mysql实现增删改查  1 目前架构、含义以及对项目进行go mod gin_restful的项目目录。 每个目录的意思描述： 对gin_restful项目进" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <!-- CSS Files
    ================================================== -->
    <link href="/assets/website/css/free_clash_meta/bootstrap.min.css" rel="stylesheet" type="text/css" id="bootstrap">
    <link href="/assets/website/css/free_clash_meta/plugins.css" rel="stylesheet" type="text/css">
    <link href="/assets/website/css/free_clash_meta/swiper.css" rel="stylesheet" type="text/css">
    <link href="/assets/website/css/free_clash_meta/style.css" rel="stylesheet" type="text/css">
    <link href="/assets/website/css/free_clash_meta/coloring.css" rel="stylesheet" type="text/css">
    <!-- color scheme -->
    <link id="colors" href="/assets/website/css/free_clash_meta/scheme-01.css" rel="stylesheet" type="text/css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8MB0F69N3T"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8MB0F69N3T');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
    <div id="wrapper">
                <!-- page preloader begin -->
        <div id="de-loader"></div>
        <!-- page preloader close -->
        <!-- header begin -->
        <header class="transparent header-light has-topbar">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="de-flex sm-pt10">
                            <div class="de-flex-col">
                                <!-- logo begin -->
                                <div id="logo">
                                    <a href="/" class="xcblog-blog-logo">
                                                                                <span class="text-primary m-0">Free Clash Meta</span>
                                                                            </a>
                                </div>
                                <!-- logo close -->
                            </div>
                            <div class="de-flex-col header-col-mid">
                                <ul id="mainmenu">
                                                                        <li><a class="menu-item" href="/">首页</a></li>
                                                                        <li><a class="menu-item" href="/free-nodes/">免费节点</a></li>
                                                                        <li><a class="menu-item" href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a class="menu-item" href="/client.htm">客户端</a></li>
                                                                        <li><a class="menu-item" href="/news/">新闻资讯</a></li>
                                                                    </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <!-- header close -->
        <!-- content begin -->
        <div id="content" class="no-top no-bottom">
            <div id="top"></div>
            <!-- section begin -->
            <section id="de-subheader" class="mt-sm-60 pt20 pb20 bg-gradient-45-deg text-light">
                <div class="container relative z-index-1000">
                    <div class="row align-items-center">
                        <div class="col-lg-6">
                            <h1 class="mb-0" style="font-size: 2.5rem;">go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查</h1>
                        </div>
                        <div class="col-lg-6 text-lg-end">
                            <ul class="crumb">
                                <li><a href="/">首页</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                                <li class="active">正文</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </section>
            <!-- section close -->
            <section>
                <div class="container relative">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <h2> <a id="_Ginrest_full_apimysql_0" rel="nofollow"></a>一 Gin、rest full api和mysql实现增删改查</h2> <h2> <a id="1_go_mod_2" rel="nofollow"></a>1 目前架构、含义以及对项目进行go mod</h2> <p>gin_restful的项目目录。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9fb6aac7b4e05df1db4661e393877dd5.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> <p>每个目录的意思描述：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/b5248f4d8671d1e70e67ed9ec94586aa.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> <p>对gin_restful项目进行mod处理：</p> <pre><code class="prism language-bash"><span class="token comment"># 1. 去到自己的gin_restful项目目录路径下。</span> <span class="token builtin class-name">cd</span> xxx<span class="token punctuation">\</span>gin_restful<span class="token punctuation">\</span> <span class="token comment"># 2. 如果之前以及mod init，可以删除这些文件。主要是go.mod、go.sum。</span> <span class="token function">rm</span> go.* <span class="token comment"># 3. 进行mod初始化。</span> <span class="token comment"># 注意：后面跟着的工程名gin_restful请设置成对应所在的根目录名字，否则在build时会报错。</span> go mod init gin_restful <span class="token comment"># 4. 构建，此时会自动帮你下载项目用到的第三方库。</span> go build </code></pre> <p>此时会看到程序运行起来。我们先把程序关掉。</p> <h2> <a id="2__25" rel="nofollow"></a>2 代码</h2> <p><strong>api/users.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> api  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"fmt"</span> 	<span class="token punctuation">.</span> <span class="token string">"gin_restful/models"</span> 	<span class="token string">"net/http"</span> 	<span class="token string">"strconv"</span>  	<span class="token string">"github.com/gin-gonic/gin"</span> <span class="token punctuation">)</span>  <span class="token comment">//index</span> <span class="token keyword">func</span> <span class="token function">IndexUsers</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"It works"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//获得所有记录</span> <span class="token keyword">func</span> <span class="token function">GetAll</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	p <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 	rs<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">GetRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"list"</span><span class="token punctuation">:</span> rs<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//增加一条记录</span> <span class="token keyword">func</span> <span class="token function">AddUsers</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	name <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span> 	telephone <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"telephone"</span><span class="token punctuation">)</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"name:"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"telephone:"</span><span class="token punctuation">,</span> telephone<span class="token punctuation">)</span> 	<span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{<!-- --></span> 		msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"name字段错误"</span><span class="token punctuation">)</span> 		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 			<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 		<span class="token punctuation">}</span><span class="token punctuation">)</span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	person <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span> 		Name<span class="token punctuation">:</span>      name<span class="token punctuation">,</span> 		Telephone<span class="token punctuation">:</span> telephone<span class="token punctuation">,</span> 	<span class="token punctuation">}</span> 	id <span class="token operator">:=</span> person<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"insert 成功 %d"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//获得一条记录</span> <span class="token keyword">func</span> <span class="token function">GetOne</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	ids <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> 	id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span> 	p <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span> 		Id<span class="token punctuation">:</span> id<span class="token punctuation">,</span> 	<span class="token punctuation">}</span> 	rs<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">GetRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"result"</span><span class="token punctuation">:</span> rs<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token function">UpdateUser</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	ids <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> 	id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span> 	telephone <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"telephone"</span><span class="token punctuation">)</span> 	person <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span> 		Id<span class="token punctuation">:</span>        id<span class="token punctuation">,</span> 		Telephone<span class="token punctuation">:</span> telephone<span class="token punctuation">,</span> 	<span class="token punctuation">}</span> 	row <span class="token operator">:=</span> person<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"updated successful %d"</span><span class="token punctuation">,</span> row<span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//删除一条记录</span> <span class="token keyword">func</span> <span class="token function">DelUser</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	ids <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> 	id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span> 	row <span class="token operator">:=</span> <span class="token function">Delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> 	msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"delete successful %d"</span><span class="token punctuation">,</span> row<span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p><strong>db/mysql.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> db  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"database/sql"</span> 	<span class="token string">"fmt"</span> 	<span class="token string">"log"</span>  	<span class="token boolean">_</span> <span class="token string">"github.com/go-sql-driver/mysql"</span> <span class="token punctuation">)</span>  <span class="token comment">// 全局的mysql线程池对象。</span> <span class="token keyword">var</span> SqlDB <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB  <span class="token comment">// 一个包里，名字为init的函数会自动被调用。并且在main开始前被调用。如不想被自动调用可以将名字改掉。</span> <span class="token comment">// 相当于C++的static静态变量、全局变量在编译时就被初始化了。</span> <span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>  	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"sql init"</span><span class="token punctuation">)</span> <span class="token comment">// 包里的init自动调用，在main前执行。所以这句话会在main前面打印。</span>  	<span class="token keyword">var</span> err <span class="token builtin">error</span> 	SqlDB<span class="token punctuation">,</span> err <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"root:123456@tcp(127.0.0.1:3306)/go_test?charset=utf8mb4"</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	err <span class="token operator">=</span> SqlDB<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	SqlDB<span class="token punctuation">.</span><span class="token function">SetMaxIdleConns</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> 	SqlDB<span class="token punctuation">.</span><span class="token function">SetMaxOpenConns</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p><strong>models/users.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> models  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"gin_restful/db"</span> 	<span class="token string">"log"</span> <span class="token punctuation">)</span>  <span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span>     Id <span class="token builtin">int</span> <span class="token string">`json:"id" form:"id"`</span>     Name <span class="token builtin">string</span> <span class="token string">`json:"name" form:"name"`</span>     Telephone <span class="token builtin">string</span> <span class="token string">`json:"telephone" form:"telephone"`</span> <span class="token punctuation">}</span>  <span class="token comment">//插入</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>person <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int64</span> <span class="token punctuation">{<!-- --></span>     rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span><span class="token string">"INSERT into users (name, telephone) value (?,?)"</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> person<span class="token punctuation">.</span>Telephone<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     id<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">LastInsertId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> id <span class="token punctuation">}</span>  <span class="token comment">//查询一条记录</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">GetRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>person Person<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>  <span class="token punctuation">{<!-- --></span>     person <span class="token operator">=</span> Person<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>     err <span class="token operator">=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">QueryRow</span><span class="token punctuation">(</span><span class="token string">"select id,name,telephone from users where id = ?"</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Telephone<span class="token punctuation">)</span>     <span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token comment">//查询所有记录</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>person <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">GetRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>persons <span class="token punctuation">[</span><span class="token punctuation">]</span>Person<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"select id,name,telephone from users"</span><span class="token punctuation">)</span>     <span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         person <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>         err <span class="token operator">:=</span> rows<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>person<span class="token punctuation">.</span>Telephone<span class="token punctuation">)</span>         <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>             log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>         <span class="token punctuation">}</span>         persons <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>persons<span class="token punctuation">,</span> person<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     rows<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token comment">//修改</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>person <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int64</span><span class="token punctuation">{<!-- --></span>     rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span><span class="token string">"update users set telephone = ? where id = ?"</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span>Telephone<span class="token punctuation">,</span> person<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">RowsAffected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span>  rows <span class="token punctuation">}</span>  <span class="token comment">//删除一条记录</span> <span class="token keyword">func</span> <span class="token function">Delete</span><span class="token punctuation">(</span>id <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int64</span>  <span class="token punctuation">{<!-- --></span>     rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span><span class="token string">"delete from users where id = ?"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>     rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">RowsAffected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> rows <span class="token punctuation">}</span> </code></pre> <p><strong>router.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> main  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token punctuation">.</span> <span class="token string">"gin_restful/api"</span>  	<span class="token string">"github.com/gin-gonic/gin"</span> <span class="token punctuation">)</span>  <span class="token comment">// 注册路由器。</span> <span class="token keyword">func</span> <span class="token function">initRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>gin<span class="token punctuation">.</span>Engine <span class="token punctuation">{<!-- --></span> 	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> IndexUsers<span class="token punctuation">)</span> <span class="token comment">// http://192.168.1.1:8806</span>  	<span class="token comment">// 2. 设置路由群组，路由群组可以设置多个。</span> 	<span class="token comment">// 例如设置用户组与部分组等等。</span> 	users <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"api/v1/users"</span><span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		users<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> GetAll<span class="token punctuation">)</span>             <span class="token comment">// http://192.168.1.1:8806/api/v1/users</span> 		users<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/add"</span><span class="token punctuation">,</span> AddUsers<span class="token punctuation">)</span>      <span class="token comment">// http://192.168.1.1:8806/api/v1/users/add</span> 		users<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/get/:id"</span><span class="token punctuation">,</span> GetOne<span class="token punctuation">)</span>     <span class="token comment">// http://192.168.1.1:8806/api/v1/users/get/5</span> 		users<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">,</span> UpdateUser<span class="token punctuation">)</span> <span class="token comment">// http://192.168.1.1:8806/api/v1/users/update</span> 		users<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">,</span> DelUser<span class="token punctuation">)</span>       <span class="token comment">// http://192.168.1.1:8806/api/v1/users/del</span> 	<span class="token punctuation">}</span>  	departments <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"api/v1/departments"</span><span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		departments<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> GetAll<span class="token punctuation">)</span>             <span class="token comment">// http://192.168.1.1:8806/api/v1/departments</span> 		departments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/add"</span><span class="token punctuation">,</span> AddUsers<span class="token punctuation">)</span>      <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/add</span> 		departments<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/get/:id"</span><span class="token punctuation">,</span> GetOne<span class="token punctuation">)</span>     <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/get/5</span> 		departments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">,</span> UpdateUser<span class="token punctuation">)</span> <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/update</span> 		departments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">,</span> DelUser<span class="token punctuation">)</span>       <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/del</span> 	<span class="token punctuation">}</span>  	<span class="token keyword">return</span> router <span class="token punctuation">}</span> </code></pre> <p><strong>main.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> main  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"fmt"</span> 	<span class="token string">"gin_restful/db"</span> <span class="token punctuation">)</span>  <span class="token comment">// go mod init  xx_project</span> <span class="token comment">// go build</span> <span class="token comment">// ./xx_project</span> <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main start"</span><span class="token punctuation">)</span>  	<span class="token comment">// 1. 初始化mysql(自动调用init)，并设置mysql的关闭函数。</span> 	<span class="token keyword">if</span> db<span class="token punctuation">.</span>SqlDB <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">defer</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span>  	<span class="token comment">// 2. http服务开启前，提前注册路由器参数。</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main 111"</span><span class="token punctuation">)</span> 	router <span class="token operator">:=</span> <span class="token function">initRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main 222"</span><span class="token punctuation">)</span>  	<span class="token comment">// 3. 依赖返回的router，启动http服务器。</span> 	<span class="token comment">// 启动后，如果客户端请求相关api，那么会调用相关的函数进行处理。</span> 	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8806"</span><span class="token punctuation">)</span>  	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main 444"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p>为了进行演示，我们重新额外创建一个user表。<br /> 执行go_test.sql文件：</p> <pre><code class="prism language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> go_test<span class="token punctuation">;</span> <span class="token keyword">use</span> go_test<span class="token punctuation">;</span>  <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>users<span class="token punctuation">`</span> <span class="token punctuation">(</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>telephone<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span> </code></pre> <p>演示结果：</p> <ul> <li> <p>1）http://127.0.0.1:8806/api/v1/users。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/d9dfa0fe797b4d8acf34d90273e0bacb.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>2）http://127.0.0.1:8806/api/v1/users/add。注意要求是POST请求，如果使用GET请求会返回404。说明Gin当请求的方法不符合时，会返回404。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/ba16d60ea55603f4f1ff1285876f6f2c.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>3）http://127.0.0.1:8806/api/v1/users/get/1。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/f3763ad9d84683a86364816fbffd851c.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>4）http://127.0.0.1:8806/api/v1/users/update。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9e92db7611a4c8a2ad324c8dd989e837.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>5）http://127.0.0.1:8806/api/v1/users/del。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9c84845286fe990517a766a85ff5fc41.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> </ul> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-67694.htm">动物疫苗价格表图片高清大全集视频（动物疫苗接种时间表）</a></p>
                                        <p>下一个：<a href="/news/article-68335.htm">北京给鹦鹉看病的医院（北京给鹦鹉看病的医院哪家好）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-59818.htm" title="合肥宠物猫领养中心电话（合肥宠物猫领养中心电话地址）">合肥宠物猫领养中心电话（合肥宠物猫领养中心电话地址）</a></li>
                        <li class="py-2"><a href="/news/article-56961.htm" title="宠物领养软件缺点有哪些（宠物领养软件下载）">宠物领养软件缺点有哪些（宠物领养软件下载）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-3-clash-meta-windows.htm" title="2月3日最新Free Clash Meta订阅 | 22.7M/S|2025年Shadowrocket/SSR/Clash/V2ray免费节点地址链接分享">2月3日最新Free Clash Meta订阅 | 22.7M/S|2025年Shadowrocket/SSR/Clash/V2ray免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/news/article-60960.htm" title="襄阳流浪宠物领养中心在哪里?（最新襄阳市流浪狗救助站地址）">襄阳流浪宠物领养中心在哪里?（最新襄阳市流浪狗救助站地址）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-1-clash-meta-node.htm" title="3月1日最新Free Clash Meta订阅 | 18.5M/S|2025年Clash/V2ray/Shadowrocket/SSR免费节点地址链接分享">3月1日最新Free Clash Meta订阅 | 18.5M/S|2025年Clash/V2ray/Shadowrocket/SSR免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-4-clash-meta-windows.htm" title="3月4日最新Free Clash Meta订阅 | 21.9M/S|2025年SSR/Shadowrocket/Clash/V2ray免费节点地址链接分享">3月4日最新Free Clash Meta订阅 | 21.9M/S|2025年SSR/Shadowrocket/Clash/V2ray免费节点地址链接分享</a></li>
                        <li class="py-2"><a href="/news/article-63343.htm" title="在VS2015下配置websocket++,并用C++搭建一个简单的客户端">在VS2015下配置websocket++,并用C++搭建一个简单的客户端</a></li>
                        <li class="py-2"><a href="/news/article-62163.htm" title="实木衣柜品牌十大名牌排名前十名(实木衣柜品牌 知乎)">实木衣柜品牌十大名牌排名前十名(实木衣柜品牌 知乎)</a></li>
                        <li class="py-2"><a href="/news/article-61556.htm" title="河南省动物疫病预防控制中心（河南省动物疫病预防控制中心地址）">河南省动物疫病预防控制中心（河南省动物疫病预防控制中心地址）</a></li>
                        <li class="py-2"><a href="/news/article-49692.htm" title="动物疫苗种类有几种类型图片大全（动物疫苗的种类和制备原理）">动物疫苗种类有几种类型图片大全（动物疫苗的种类和制备原理）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </section>
        </div>
        <!-- content close -->
                <!-- footer begin -->
        <footer class="footer-light">
            <div class="subfooter relative z-1000">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12">
                            <p>
                                <a href="/">首页</a> |
                                <a href="/free-node/">免费节点</a> |
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>
                                <a href="/">Free Clash Meta免费节点机场官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- footer close -->
        <!-- Javascript Files
                    ================================================== -->
        <script src="/assets/website/js/frontend/free_clash_meta/plugins.js"></script>
        <script src="/assets/website/js/frontend/free_clash_meta/designesia.js"></script>
        <script src="/assets/website/js/frontend/free_clash_meta/swiper.js"></script>
        <script src="/assets/website/js/frontend/free_clash_meta/custom-marquee.js"></script>
        <script src="/assets/website/js/frontend/free_clash_meta/custom-swiper-1.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div>
</body>

</html>